{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_Azure_Monitor_Alert_ITSM_HTTP_API_name": {
            "defaultValue": "Azure-Monitor-Alert-ITSM-HTTP-API",
            "type": "String"
        },
        "userAssignedIdentities_ITSM_MI_externalid": {
            "defaultValue": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/<MyResourceGroup>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ITSM-MI",
            "type": "String"
        },
        "connections_keyvault_externalid": {
            "defaultValue": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/<MyResourceGroup>/providers/Microsoft.Web/connections/itsm-keyvault-connection-mi",
            "type": "String"
        },
        "connections_api_externalid": {
            "defaultValue": "/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Web/locations/<MyRegion>/managedApis/keyvault",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Azure_Monitor_Alert_ITSM_HTTP_API_name')]",
            "location": "eastus",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[parameters('userAssignedIdentities_ITSM_MI_externalid')]": {}
                }
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "ITSMcompanyId": {
                            "defaultValue": "0",
                            "type": "String"
                        },
                        "ITSMqueueId": {
                            "defaultValue": "0",
                            "type": "String"
                        },
                        "ManagedIdentityResourceId": {
                            "defaultValue": "[parameters('userAssignedIdentities_ITSM_MI_externalid')]",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "alertContext": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "essentials": {
                                                    "properties": {
                                                        "alertContextVersion": {
                                                            "type": "string"
                                                        },
                                                        "alertId": {
                                                            "type": "string"
                                                        },
                                                        "alertRule": {
                                                            "type": "string"
                                                        },
                                                        "alertTargetIDs": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "essentialsVersion": {
                                                            "type": "string"
                                                        },
                                                        "firedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "monitorCondition": {
                                                            "type": "string"
                                                        },
                                                        "monitoringService": {
                                                            "type": "string"
                                                        },
                                                        "originAlertId": {
                                                            "type": "string"
                                                        },
                                                        "resolvedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "severity": {
                                                            "type": "string"
                                                        },
                                                        "signalType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "schemaId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition_-_Is_monitorCondition_Fired": {
                            "actions": {
                                "Condition_-_Get_alertState": {
                                    "actions": {
                                        "Compose_-_Convert_Investigation_link_to_AlertDetails_link": {
                                            "runAfter": {
                                                "Compose_-_Extract_alertID_number": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(triggerBody()?['data']?['essentials']?['investigationLink'], 'Issue', 'AlertDetails')"
                                        },
                                        "Compose_-_Extract_alertID_number": {
                                            "runAfter": {
                                                "Condition_-_Check_for_Metric_signalType": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@last(split(triggerBody()?['data']?['essentials']?['alertId'], '/'))"
                                        },
                                        "Compose_-_Normalize_dimensions_1": {
                                            "runAfter": {
                                                "Compose_-_Truncate_alertDetails": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@last(split(outputs('Compose_-_Truncate_alertDetails'),'dimensions'))"
                                        },
                                        "Compose_-_Normalize_dimensions_2": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_1": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@first(split(outputs('Compose_-_Normalize_dimensions_1'),'metricValue'))"
                                        },
                                        "Compose_-_Normalize_dimensions_3": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(outputs('Compose_-_Normalize_dimensions_2'), '\\\\', '\\')"
                                        },
                                        "Compose_-_Normalize_dimensions_4": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(outputs('Compose_-_Normalize_dimensions_3'), ':[', '')"
                                        },
                                        "Compose_-_Normalize_dimensions_5": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_4": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(outputs('Compose_-_Normalize_dimensions_4'),'],','')"
                                        },
                                        "Compose_-_Truncate_alertDetails": {
                                            "runAfter": {
                                                "Set_variable_-_alertDetails": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@first(split(variables('alertDetails'), 'linkToSearchResultsUI'))"
                                        },
                                        "HTTP_-_Alert_changestate_and_comment_with_ITSMitemId": {
                                            "runAfter": {
                                                "Parse_JSON_-_Get_ITSMitemId": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://management.azure.com@{triggerBody()?['data']?['essentials']?['alertId']}/changestate?api-version=2019-03-01-preview&newState=Acknowledged",
                                                "method": "POST",
                                                "headers": {
                                                    "Content-Type ": "application/json",
                                                    "api-supported-versions": "2019-03-01-preview"
                                                },
                                                "body": {
                                                    "comments": "ITSMitemId: @{body('Parse_JSON_-_Get_ITSMitemId')?['itemId']}"
                                                },
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity",
                                                    "identity": "[parameters('userAssignedIdentities_ITSM_MI_externalid')]",
                                                    "audience": ""
                                                }
                                            }
                                        },
                                        "HTTP_-_Create_new_ITSM_ticket": {
                                            "runAfter": {
                                                "Set_variable_-_configID": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://ITSM.net/atservicesrest/v1.0/Tickets",
                                                "method": "POST",
                                                "headers": {
                                                    "Accept": "*/*",
                                                    "Accept-Encoding": "gzip, deflate, br",
                                                    "ApiIntegrationCode": "@{body('Get_secret_-_API_Integration_Code')?['value']}",
                                                    "Connection": "keep-alive",
                                                    "Content-Type": "application/json",
                                                    "Secret": "@{body('Get_secret_-_API_Secret')?['value']}",
                                                    "UserName": "@{body('Get_secret_-_API_User_Name')?['value']}"
                                                },
                                                "body": {
                                                    "ConfigurationItemID": "@variables('configID')",
                                                    "Description": "Alert dimensions: @{outputs('Compose_-_Normalize_dimensions_6')} \nView the alert in Azure Monitor:\n@{outputs('Compose_-_Convert_Investigation_link_to_AlertDetails_link')}\n\nITSM Configuration Item (if present): @{variables('configID')}\n\nAlert name: @{triggerBody()?['data']?['essentials']?['alertRule']}\nSeverity: @{triggerBody()?['data']?['essentials']?['severity']}\nMonitor condition: @{triggerBody()?['data']?['essentials']?['monitorCondition']}\nAffected resource: @{variables('Computer')}\nResource type: @{triggerBody()?['data']?['essentials']?['targetResourceType']}\nResource group: @{triggerBody()?['data']?['essentials']?['targetResourceGroup']}\nDescription: @{triggerBody()?['data']?['essentials']?['description']}\nMonitoring service: @{triggerBody()?['data']?['essentials']?['monitoringService']}\nSignal type: @{triggerBody()?['data']?['essentials']?['signalType']}\nFired time: @{triggerBody()?['data']?['essentials']?['firedDateTime']}\n\nAlert ID: @{outputs('Compose_-_Extract_alertID_number')}\n\nAlert rule ID: @{triggerBody()?['data']?['essentials']?['alertRuleID']}\n\nAlert Context:\n@{outputs('Compose_-_Truncate_alertDetails')}",
                                                    "QueueID": "@{parameters('ITSMqueueId')}",
                                                    "companyID": "@{parameters('ITSMcompanyId')}",
                                                    "issueType": 14,
                                                    "priority": 3,
                                                    "source": 29,
                                                    "status": 1,
                                                    "subIssueType": 181,
                                                    "ticketType": 5,
                                                    "title": "@{triggerBody()?['data']?['essentials']?['monitorCondition']}: @{triggerBody()?['data']?['essentials']?['severity']} AM Alert @{triggerBody()?['data']?['essentials']?['alertRule']} (on @{variables('Computer')}) at @{triggerBody()?['data']?['essentials']?['firedDateTime']}",
                                                    "userDefinedFields": [
                                                        {
                                                            "name": "AMAlertID",
                                                            "value": "@{outputs('Compose_-_Extract_alertID_number')}"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "HTTP_-_Get_computer_configID_from_ITSM": {
                                            "runAfter": {
                                                "Get_secret_-_API_User_Name": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://ITSM.net/atservicesrest/v1.0/ConfigurationItems/query?search=",
                                                "method": "POST",
                                                "headers": {
                                                    "Accept": "*/*",
                                                    "Accept-Encoding": "gzip, deflate, br",
                                                    "ApiIntegrationCode": "@{body('Get_secret_-_API_Integration_Code')?['value']}",
                                                    "Connection": "keep-alive",
                                                    "Content-Type": "application/json",
                                                    "Secret": "@{body('Get_secret_-_API_Secret')?['value']}",
                                                    "UserName": "@{body('Get_secret_-_API_User_Name')?['value']}"
                                                },
                                                "body": {
                                                    "filter": [
                                                        {
                                                            "field": "referenceTitle",
                                                            "op": "eq",
                                                            "value": "@{variables('Computer')}"
                                                        },
                                                        {
                                                            "field": "isActive",
                                                            "op": "eq",
                                                            "value": "true"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "Parse_JSON_-_ITSM_ConfigurationItems": {
                                            "runAfter": {
                                                "HTTP_-_Get_computer_configID_from_ITSM": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('HTTP_-_Get_computer_configID_from_ITSM')",
                                                "schema": {
                                                    "properties": {
                                                        "filter": {
                                                            "items": {
                                                                "properties": {
                                                                    "field": {
                                                                        "type": "string"
                                                                    },
                                                                    "op": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "field",
                                                                    "op",
                                                                    "value"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Parse_JSON_-_Get_ITSMitemId": {
                                            "runAfter": {
                                                "HTTP_-_Create_new_ITSM_ticket": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('HTTP_-_Create_new_ITSM_ticket')",
                                                "schema": {
                                                    "properties": {
                                                        "itemId": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_variable_-_Computer": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Computer",
                                                "value": "@{triggerBody()?['data']?['essentials']?['configurationItems']}"
                                            }
                                        },
                                        "Set_variable_-_alertDetails": {
                                            "runAfter": {
                                                "Parse_JSON_-_ITSM_ConfigurationItems": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "alertDetails",
                                                "value": "@{triggerBody()?['data']?['alertContext']}"
                                            }
                                        },
                                        "Set_variable_-_configID": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_6": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "configID",
                                                "value": "@{body('Parse_JSON_-_ITSM_ConfigurationItems')?['items']?[0]?['id']}"
                                            }
                                        },
                                        "Condition_-_Check_for_Metric_signalType": {
                                            "actions": {
                                                "Set_variable_-_Computer_(Metric_alert)": {
                                                    "runAfter": {
                                                        "Compose_-_Normalize_Computer_2_(Metric_alert)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "Computer",
                                                        "value": "@outputs('Compose_-_Normalize_Computer_2_(Metric_alert)')"
                                                    }
                                                },
                                                "Set_variable_-_alertDetails_(Metric_alert)": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "alertDetails",
                                                        "value": "@{triggerBody()?['data']?['alertContext']}"
                                                    }
                                                },
                                                "Compose_-_Truncate_alertDetails_(Metric_alert)": {
                                                    "runAfter": {
                                                        "Set_variable_-_alertDetails_(Metric_alert)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@last(split(variables('alertDetails'),'Computer\",\"value\":\"'))"
                                                },
                                                "Compose_-_Normalize_Computer_1_(Metric_alert)": {
                                                    "runAfter": {
                                                        "Compose_-_Truncate_alertDetails_(Metric_alert)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@first(split(outputs('Compose_-_Truncate_alertDetails_(Metric_alert)'),'\",\"type\":null'))"
                                                },
                                                "Compose_-_Normalize_Computer_2_(Metric_alert)": {
                                                    "runAfter": {
                                                        "Compose_-_Normalize_Computer_1_(Metric_alert)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@first(split(outputs('Compose_-_Normalize_Computer_1_(Metric_alert)'),'.'))"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_variable_-_Computer": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Compose_-_Strip_out_Computer_resource_prefix": {
                                                        "type": "Compose",
                                                        "inputs": "@last(split(variables('Computer'),'machines'))"
                                                    },
                                                    "Compose_-_Strip_out_Computer_domain_suffixes": {
                                                        "runAfter": {
                                                            "Compose_-_Strip_out_Computer_resource_prefix": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@first(split(outputs('Compose_-_Strip_out_Computer_resource_prefix'),'.'))"
                                                    },
                                                    "Compose_-_Normalize_Computer_without_domain_suffix": {
                                                        "runAfter": {
                                                            "Compose_-_Strip_out_Computer_domain_suffixes": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@replace(outputs('Compose_-_Strip_out_Computer_domain_suffixes'), '\"]', '')"
                                                    },
                                                    "Compose_-_Strip_out_Computer_leading_characters_1": {
                                                        "runAfter": {
                                                            "Compose_-_Normalize_Computer_without_domain_suffix": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@last(split(outputs('Compose_-_Normalize_Computer_without_domain_suffix'),'\"'))"
                                                    },
                                                    "Compose_-_Strip_out_Computer_leading_characters_2": {
                                                        "runAfter": {
                                                            "Compose_-_Strip_out_Computer_leading_characters_1": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@last(split(outputs('Compose_-_Strip_out_Computer_leading_characters_1'),'/'))"
                                                    },
                                                    "Set_variable_-_Computer_(Log_alert)": {
                                                        "runAfter": {
                                                            "Compose_-_Strip_out_Computer_leading_characters_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "SetVariable",
                                                        "inputs": {
                                                            "name": "Computer",
                                                            "value": "@{outputs('Compose_-_Strip_out_Computer_leading_characters_2')}"
                                                        }
                                                    },
                                                    "Condition_-_did_Computer_distill_to_microsoft": {
                                                        "actions": {
                                                            "Set_variable_-_Computer_(not_microsoft)": {
                                                                "runAfter": {
                                                                    "Join_-_Convert_dimensions_array_to_CSV_string": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "Computer",
                                                                    "value": "@body('Join_-_Convert_dimensions_array_to_CSV_string')"
                                                                }
                                                            },
                                                            "Compose_-_Strip_out_Computer_(not_microsoft)_resource_prefix": {
                                                                "runAfter": {
                                                                    "Set_variable_-_Computer_(not_microsoft)": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "Compose",
                                                                "inputs": "@last(split(variables('Computer'),'value\":\"'))"
                                                            },
                                                            "Join_-_Convert_dimensions_array_to_CSV_string": {
                                                                "type": "Join",
                                                                "inputs": {
                                                                    "from": "@triggerBody()?['data']?['alertContext']?['condition']?['allOf']",
                                                                    "joinWith": ","
                                                                }
                                                            },
                                                            "Compose_-_Strip_out_Computer_(not_microsoft)_domain_suffixes": {
                                                                "runAfter": {
                                                                    "Compose_-_Strip_out_Computer_(not_microsoft)_resource_prefix": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "Compose",
                                                                "inputs": "@first(split(outputs('Compose_-_Strip_out_Computer_(not_microsoft)_resource_prefix'),'\"}],\"metricValue'))"
                                                            },
                                                            "Set_variable_-_Computer_(not_microsoft)_normalized": {
                                                                "runAfter": {
                                                                    "Compose_-_Strip_out_Computer_(not_microsoft)_domain_suffixes": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "Computer",
                                                                    "value": "@outputs('Compose_-_Strip_out_Computer_(not_microsoft)_domain_suffixes')"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Set_variable_-_Computer_(Log_alert)": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {}
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@variables('Computer')",
                                                                        "microsoft"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@triggerBody()?['data']?['essentials']?['signalType']",
                                                            "Metric"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Get_secret_-_API_Integration_Code": {
                                            "runAfter": {
                                                "Compose_-_Convert_Investigation_link_to_AlertDetails_link": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('ITSMAPIIntegrationCode')}/value"
                                            }
                                        },
                                        "Get_secret_-_API_Secret": {
                                            "runAfter": {
                                                "Get_secret_-_API_Integration_Code": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('ITSMAPISecret')}/value"
                                            }
                                        },
                                        "Get_secret_-_API_User_Name": {
                                            "runAfter": {
                                                "Get_secret_-_API_Secret": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/secrets/@{encodeURIComponent('ITSMAPIUserName')}/value"
                                            }
                                        },
                                        "Compose_-_Normalize_dimensions_6": {
                                            "runAfter": {
                                                "Compose_-_Normalize_dimensions_5": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@replace(outputs('Compose_-_Normalize_dimensions_5'),',\"type\":null,\"values\":null,\"operator\":null','')"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_-_alert": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('HTTP_-_Get_alert_by_alertId')?['properties']?['essentials']?['alertState']",
                                                    "New"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_Get_alert_by_alertId": {
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://management.azure.com@{triggerBody()?['data']?['essentials']?['alertId']}?api-version=2019-05-05-preview",
                                        "method": "GET",
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "identity": "[parameters('userAssignedIdentities_ITSM_MI_externalid')]",
                                            "audience": ""
                                        }
                                    }
                                },
                                "Parse_JSON_-_alert": {
                                    "runAfter": {
                                        "HTTP_-_Get_alert_by_alertId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP_-_Get_alert_by_alertId')",
                                        "schema": {
                                            "properties": {
                                                "body": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "properties": {
                                                            "properties": {
                                                                "context": {
                                                                    "properties": {
                                                                        "context": {
                                                                            "properties": {
                                                                                "condition": {
                                                                                    "properties": {
                                                                                        "allOf": {
                                                                                            "items": {
                                                                                                "properties": {
                                                                                                    "dimensions": {
                                                                                                        "items": {
                                                                                                            "properties": {
                                                                                                                "name": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "name",
                                                                                                                "value"
                                                                                                            ],
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "type": "array"
                                                                                                    },
                                                                                                    "event": {},
                                                                                                    "failingPeriods": {
                                                                                                        "properties": {
                                                                                                            "minFailingPeriodsToAlert": {
                                                                                                                "type": "integer"
                                                                                                            },
                                                                                                            "numberOfEvaluationPeriods": {
                                                                                                                "type": "integer"
                                                                                                            }
                                                                                                        },
                                                                                                        "type": "object"
                                                                                                    },
                                                                                                    "linkToFilteredSearchResultsAPI": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "linkToFilteredSearchResultsUI": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "linkToSearchResultsAPI": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "linkToSearchResultsUI": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "metricMeasureColumn": {},
                                                                                                    "metricValue": {
                                                                                                        "type": "integer"
                                                                                                    },
                                                                                                    "operator": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "searchQuery": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "targetResourceTypes": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "threshold": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "timeAggregation": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "searchQuery",
                                                                                                    "metricMeasureColumn",
                                                                                                    "targetResourceTypes",
                                                                                                    "operator",
                                                                                                    "threshold",
                                                                                                    "timeAggregation",
                                                                                                    "dimensions",
                                                                                                    "metricValue",
                                                                                                    "failingPeriods",
                                                                                                    "linkToSearchResultsUI",
                                                                                                    "linkToFilteredSearchResultsUI",
                                                                                                    "linkToSearchResultsAPI",
                                                                                                    "linkToFilteredSearchResultsAPI",
                                                                                                    "event"
                                                                                                ],
                                                                                                "type": "object"
                                                                                            },
                                                                                            "type": "array"
                                                                                        },
                                                                                        "windowEndTime": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "windowSize": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "windowStartTime": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "conditionType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string"
                                                                                },
                                                                                "id": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "portalLink": {
                                                                                    "type": "string"
                                                                                },
                                                                                "resourceGroupName": {
                                                                                    "type": "string"
                                                                                },
                                                                                "resourceId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "resourceName": {
                                                                                    "type": "string"
                                                                                },
                                                                                "resourceType": {
                                                                                    "type": "string"
                                                                                },
                                                                                "severity": {
                                                                                    "type": "string"
                                                                                },
                                                                                "subscriptionId": {
                                                                                    "type": "string"
                                                                                },
                                                                                "timestamp": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "properties": {
                                                                            "properties": {},
                                                                            "type": "object"
                                                                        },
                                                                        "status": {
                                                                            "type": "string"
                                                                        },
                                                                        "version": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "egressConfig": {
                                                                    "properties": {
                                                                        "displayConfig": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "displayControls": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "displayName": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "isOptional": {
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "isPropertySerialized": {
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "property": {
                                                                                                    "type": "string"
                                                                                                },
                                                                                                "type": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "property",
                                                                                                "displayName",
                                                                                                "type",
                                                                                                "isOptional",
                                                                                                "isPropertySerialized"
                                                                                            ],
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "rootJsonNode": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "sectionName": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "rootJsonNode",
                                                                                    "sectionName",
                                                                                    "displayControls"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "monitorService": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "essentials": {
                                                                    "properties": {
                                                                        "actionStatus": {
                                                                            "properties": {
                                                                                "isSuppressed": {
                                                                                    "type": "boolean"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "alertRule": {
                                                                            "type": "string"
                                                                        },
                                                                        "alertState": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": {
                                                                            "type": "string"
                                                                        },
                                                                        "lastModifiedDateTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "lastModifiedUserName": {
                                                                            "type": "string"
                                                                        },
                                                                        "monitorCondition": {
                                                                            "type": "string"
                                                                        },
                                                                        "monitorConditionResolvedDateTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "monitorService": {
                                                                            "type": "string"
                                                                        },
                                                                        "severity": {
                                                                            "type": "string"
                                                                        },
                                                                        "signalType": {
                                                                            "type": "string"
                                                                        },
                                                                        "sourceCreatedId": {
                                                                            "type": "string"
                                                                        },
                                                                        "startDateTime": {
                                                                            "type": "string"
                                                                        },
                                                                        "targetResource": {
                                                                            "type": "string"
                                                                        },
                                                                        "targetResourceGroup": {
                                                                            "type": "string"
                                                                        },
                                                                        "targetResourceName": {
                                                                            "type": "string"
                                                                        },
                                                                        "targetResourceType": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "headers": {
                                                    "properties": {
                                                        "Cache-Control": {
                                                            "type": "string"
                                                        },
                                                        "Content-Length": {
                                                            "type": "string"
                                                        },
                                                        "Content-Security-Policy": {
                                                            "type": "string"
                                                        },
                                                        "Content-Type": {
                                                            "type": "string"
                                                        },
                                                        "Date": {
                                                            "type": "string"
                                                        },
                                                        "Expires": {
                                                            "type": "string"
                                                        },
                                                        "Pragma": {
                                                            "type": "string"
                                                        },
                                                        "Strict-Transport-Security": {
                                                            "type": "string"
                                                        },
                                                        "X-Cache": {
                                                            "type": "string"
                                                        },
                                                        "X-Content-Type-Options": {
                                                            "type": "string"
                                                        },
                                                        "X-MSEdge-Ref": {
                                                            "type": "string"
                                                        },
                                                        "X-XSS-Protection": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-correlation-request-id": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-ratelimit-remaining-subscription-resource-requests": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-request-id": {
                                                            "type": "string"
                                                        },
                                                        "x-ms-routing-request-id": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "statusCode": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_-_ITSMitemId": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Condition_-_Is_monitorCondition_Resolved": {
                                        "actions": {
                                            "Condition_-_Check_for_ActionsSuppressed": {
                                                "actions": {
                                                    "Compose_-_Return_ITSMitemId": {
                                                        "runAfter": {
                                                            "Compose_-_Truncate_first_alertHistory": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@first(split(outputs('Compose_-_Truncate_first_alertHistory'),''''))"
                                                    },
                                                    "Compose_-_Truncate_first_alertHistory": {
                                                        "runAfter": {
                                                            "Compose_-_Truncate_last_alertHistory": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Compose",
                                                        "inputs": "@first(split(outputs('Compose_-_Truncate_last_alertHistory'),'ActionsTriggered'))"
                                                    },
                                                    "Compose_-_Truncate_last_alertHistory": {
                                                        "type": "Compose",
                                                        "inputs": "@last(split(body('Join_-_Convert_alertHistory_array_to_string'),'ITSMitemId: '))"
                                                    },
                                                    "HTTP_-_Change_Status_to_Complete": {
                                                        "runAfter": {
                                                            "HTTP_-_Post_Update_to_ITSM": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Http",
                                                        "inputs": {
                                                            "uri": "https://ITSM.net/atservicesrest/v1.0/Tickets/",
                                                            "method": "PATCH",
                                                            "headers": {
                                                                "Accept": "*/*",
                                                                "Accept-Encoding": "gzip, deflate, br",
                                                                "ApiIntegrationCode": "@{body('Get_secret_-_API_Integration_Code_2')?['value']}",
                                                                "Connection": "keep-alive",
                                                                "Content-Type": "application/json",
                                                                "Secret": "@{body('Get_secret_-_API_Secret_2')?['value']}",
                                                                "UserName": "@{body('Get_secret_-_API_User_Name_2')?['value']}"
                                                            },
                                                            "body": {
                                                                "id": "@outputs('Compose_-_Return_ITSMitemId')",
                                                                "status": 5
                                                            }
                                                        }
                                                    },
                                                    "HTTP_-_Post_Update_to_ITSM": {
                                                        "runAfter": {
                                                            "Get_secret_-_API_User_Name_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Http",
                                                        "inputs": {
                                                            "uri": "https://ITSM.net/atservicesrest/v1.0/Tickets/@{outputs('Compose_-_Return_ITSMitemId')}/Notes",
                                                            "method": "POST",
                                                            "headers": {
                                                                "Accept": "*/*",
                                                                "Accept-Encoding": "gzip, deflate, br",
                                                                "ApiIntegrationCode": "@{body('Get_secret_-_API_Integration_Code_2')?['value']}",
                                                                "Connection": "keep-alive",
                                                                "Content-Type": "application/json",
                                                                "Secret": "@{body('Get_secret_-_API_Secret_2')?['value']}",
                                                                "UserName": "@{body('Get_secret_-_API_User_Name_2')?['value']}"
                                                            },
                                                            "body": {
                                                                "Description": "Alert Resolved by Azure system",
                                                                "NoteType": 1,
                                                                "Publish": 1,
                                                                "Title": "Alert has been resolved in Azure Monitor"
                                                            }
                                                        }
                                                    },
                                                    "Get_secret_-_API_Integration_Code_2": {
                                                        "runAfter": {
                                                            "Compose_-_Return_ITSMitemId": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                            "path": "/secrets/@{encodeURIComponent('ITSMAPIIntegrationCode')}/value"
                                                        }
                                                    },
                                                    "Get_secret_-_API_Secret_2": {
                                                        "runAfter": {
                                                            "Get_secret_-_API_Integration_Code_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                            "path": "/secrets/@{encodeURIComponent('ITSMAPISecret')}/value"
                                                        }
                                                    },
                                                    "Get_secret_-_API_User_Name_2": {
                                                        "runAfter": {
                                                            "Get_secret_-_API_Secret_2": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                                                                }
                                                            },
                                                            "method": "get",
                                                            "path": "/secrets/@{encodeURIComponent('ITSMAPIUserName')}/value"
                                                        }
                                                    }
                                                },
                                                "runAfter": {
                                                    "Join_-_Convert_alertHistory_array_to_string": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {}
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "not": {
                                                                "contains": [
                                                                    "@body('Join_-_Convert_alertHistory_array_to_string')",
                                                                    "ActionsSuppressed"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "HTTP_-_Get_alertHistory_by_alertId": {
                                                "type": "Http",
                                                "inputs": {
                                                    "uri": "https://management.azure.com@{triggerBody()?['data']?['essentials']?['alertId']}/history?api-version=2019-05-05-preview",
                                                    "method": "GET",
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity",
                                                        "identity": "[parameters('userAssignedIdentities_ITSM_MI_externalid')]",
                                                        "audience": ""
                                                    }
                                                }
                                            },
                                            "Join_-_Convert_alertHistory_array_to_string": {
                                                "runAfter": {
                                                    "Parse_JSON_-_alertHistory": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Join",
                                                "inputs": {
                                                    "from": "@body('Parse_JSON_-_alertHistory')",
                                                    "joinWith": "\n"
                                                }
                                            },
                                            "Parse_JSON_-_alertHistory": {
                                                "runAfter": {
                                                    "HTTP_-_Get_alertHistory_by_alertId": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson",
                                                "inputs": {
                                                    "content": "@body('HTTP_-_Get_alertHistory_by_alertId')?['properties']?['modifications']",
                                                    "schema": {
                                                        "properties": {
                                                            "body": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "properties": {
                                                                        "properties": {
                                                                            "alertId": {
                                                                                "type": "string"
                                                                            },
                                                                            "modifications": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "comments": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "description": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "modificationEvent": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "modifiedAt": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "modifiedBy": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "newValue": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "oldValue": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "modificationEvent",
                                                                                        "oldValue",
                                                                                        "newValue",
                                                                                        "modifiedAt",
                                                                                        "modifiedBy",
                                                                                        "description"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "array"
                                                    }
                                                }
                                            }
                                        },
                                        "else": {
                                            "actions": {}
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@triggerBody()?['data']?['essentials']?['monitorCondition']",
                                                        "Resolved"
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['data']?['essentials']?['monitorCondition']",
                                            "Fired"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_variable_-_ITSMitemId": {
                            "runAfter": {
                                "Initialize_variable_-_alertId": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ITSMitemId",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Computer": {
                            "runAfter": {
                                "Condition_-_Is_alert_Sev0,_Sev1,_Sev2,_or_Sev3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Computer",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_alertDetails": {
                            "runAfter": {
                                "Initialize_variable_-_configID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "alertDetails",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_alertId": {
                            "runAfter": {
                                "Initialize_variable_-_alertDetails": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "alertId",
                                        "type": "string",
                                        "value": "@triggerBody()?['data']?['essentials']?['alertId']"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_configID": {
                            "runAfter": {
                                "Initialize_variable_-_Computer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "configID",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Condition_-_Is_alert_Sev0,_Sev1,_Sev2,_or_Sev3": {
                            "actions": {},
                            "runAfter": {},
                            "else": {
                                "actions": {
                                    "Terminate_-_Alert_is_Sev4_or_Sev5": {
                                        "type": "Terminate",
                                        "inputs": {
                                            "runStatus": "Succeeded"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "lessOrEquals": [
                                            "@triggerBody()?['data']?['essentials']?['severity']",
                                            "Sev3"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "id": "[parameters('connections_api_externalid')]",
                                "connectionId": "[parameters('connections_keyvault_externalid')]",
                                "connectionName": "itsm-keyvault-connection-mi",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity",
                                        "identity": "[parameters('userAssignedIdentities_ITSM_MI_externalid')]"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ]
}
